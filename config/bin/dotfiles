#!/bin/bash

sudo apt update -y && sudo apt upgrade -y
cd ~/.dotfiles && git pull

if ! [ -x "$(command -v stow)" ]; then
    echo "stow is not installed. Installing now..."
    sudo apt-get install -y stow
else
    echo "stow is already installed."
fi

cd ~/.dotfiles && stow config --no-folding

if ! [ -x "$(command -v ansible)" ]; then
  ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
  sudo apt install ansible -y
fi

if ! [ -x "$(command -v wmctrl)" ]; then
    echo "wmctrl is not installed. Installing now..."
    sudo apt-get install -y wmctrl
else
    echo "wmctrl is already installed."
fi

if ! [ -x "$(command -v flameshot)" ]; then
    echo "flameshot is not installed. Installing now..."
    sudo apt-get install -y flameshot
else
    echo "flameshot is already installed."
fi

if ! [ -x "$(command -v curl)" ]; then
    echo "curl is not installed. Installing now..."
    sudo apt-get install -y curl
else
    echo "curl is already installed."
fi

if ! [ -x "$(command -v zsh)" ]; then
    echo "zsh is not installed. Installing now..."
    sudo apt-get install -y zsh
else
    echo "zsh is already installed."
fi

if ! [ -x "$(command -v htop)" ]; then
    echo "htop is not installed. Installing now..."
    sudo apt-get install -y htop
else
    echo "htop is already installed."
fi

if ! [ -x "$(command -v jq)" ]; then
    echo "jq is not installed. Installing now..."
    sudo apt-get install -y jq
else
    echo "jq is already installed."
fi

if ! [ -x "$(command -v xclip)" ]; then
    echo "xclip is not installed. Installing now..."
    sudo apt-get install -y xclip
else
    echo "xclip is already installed."
fi

if ! [ -x "$(command -v python3)" ]; then
    echo "python3 is not installed. Installing now..."
    sudo apt-get install -y python3
else
    echo "python3 is already installed."
fi

if ! [ -x "$(command -v pip3)" ]; then
    echo "python3-pip is not installed. Installing now..."
    sudo apt-get install -y python3-pip
else
    echo "python3-pip is already installed."
fi

if ! [ -x "$(command -v gh)" ]; then
    echo "gh is not installed. Installing now..."
    sudo apt-get install -y gh
else
    echo "gh is already installed."
fi

if ! [ -x "$(command -v rofi)" ]; then
    echo "rofi is not installed. Installing now..."
    sudo apt-get install -y rofi
else
    echo "rofi is already installed."
fi

if ! [ -x "$(command -v flatpak)" ]; then
    echo "flatpak is not installed. Installing now..."
    sudo apt install -y flatpak
else
    echo "flatpak is already installed."
fi

if ! [ -x "$(command -v go)" ]; then
    echo "golang-go is not installed. Installing now..."
    sudo add-apt-repository ppa:longsleep/golang-backports
    sudo apt update
    sudo apt install -y golang-go
else
    echo "golang-go is already installed."
fi

if ! [ -x "$(command -v google-chrome)" ]; then
    echo "google-chrome-stable is not installed. Installing now..."
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub > linux_signing_key.pub
    sudo install -D -o root -g root -m 644 linux_signing_key.pub /etc/apt/keyrings/linux_signing_key.pub
    sudo sh -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/linux_signing_key.pub] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
    sudo apt update
    sudo apt install -y google-chrome-stable
else
    echo "google-chrome-stable is already installed."
fi

if ! [ -x "$(command -v code)" ]; then
    echo "code is not installed. Installing now..."
    sudo apt install software-properties-common apt-transport-https wget -y
    wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
    sudo apt update
    sudo apt install -y code
else
    echo "code is already installed."
fi

go install github.com/jesseduffield/lazygit@latest
go install github.com/FredrikMWold/radix-tui@latest
pip3 install --upgrade pip --break-system-packages
pip3 install psutil --break-system-packages
pip3 install keepercommander --break-system-packages


if [ -x "$(command -v ansible)" ]; then
  sudo ANSIBLE_ASK_VAULT_PASS=True ansible-playbook ~/.dotfiles/local.yml 
  chsh -s $(which zsh)  
else
  echo "Ansible is not installed. Please install it first."
fi

PROFILE=/dev/null bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash'

cd ~/.dotfiles && git remote set-url origin git@github.com:FredrikMWold/.dotfiles.git
cd ~/.dotfiles && stow config --no-folding